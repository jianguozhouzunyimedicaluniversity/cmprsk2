% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crr2.R
\name{crr2}
\alias{crr2}
\title{Competing risks regression}
\usage{
crr2(formula, data, which = NULL, cox = FALSE, variance = TRUE, ...)
}
\arguments{
\item{formula}{a formula object of form
\code{Surv(time, status(censor) == failure) ~ response} where \code{censor}
and \code{failure} are labels of the \code{status} variable denoting
the censor and failure of interest; note all other unique values of
\code{status} will be considered competing risks}

\item{data}{a data.frame in which to interpret the variables named in
\code{formula}}

\item{which}{optional character string giving the desired outcome of
interest; if given, no other \code{crr} models are returned}

\item{cox}{logical; if \code{TRUE}, a \code{\link{coxph}} model is also
fit using the event of interest with all other events as censored}

\item{variance}{logical; if \code{FALSE}, suppresses computation of the
variance estimate and residuals}

\item{...}{(ignored) additional arguments passed to \code{\link[cmprsk]{crr}}}
}
\value{
A list of \code{\link{crr}} objects with some additional attributes:

\item{\code{$`Cox PH`}}{a \code{\link{coxph}} model if \code{cox = TRUE}}
\item{\code{$nuftime}}{a vector with the number of times each unique
failure time, \code{$uftime}, was seen}
\item{\code{attr(, "model.frame")}}{the \code{\link{model.frame}}, i.e.,
\code{cov1}, used in the call to \code{\link{crr}}}
}
\description{
Regression modeling of subdistribution functions in competing risks.
}
\examples{
## 'formula' as one would pass to survival::coxph with additional
## indications for the censoring and failure codes

tp <- within(transplant, {
  event_ind <- as.integer(event) - 1L
  year <- NULL
})

## these are equivalent ways to call 'crr2'
crr2(Surv(futime, event_ind(0) == 1) ~ age + sex + abo, tp)
crr2(Surv(futime, event(censored) == death) ~ age + sex + abo, tp)


## variables can be created or altered as usual
crr2(Surv(futime, event(censored) \%in\% death) ~ cut(age, 3), tp)
crr2(Surv(futime, event(censored) \%in\% death) ~ age + I(age ^ 2), tp)
crr2(Surv(futime, event(censored) \%in\% death) ~ relevel(abo, 'O'), tp)

form <- Surv(futime, event(censored) == death) ~ age + sex + abo
crr2(form, tp[tp$age > 55, ], cox = TRUE, variance = FALSE, which = 'death')


## use the summary method to compare models easily
crrs <- crr2(form, transplant, which = 'ltx', cox = TRUE)
summary(crrs, html = FALSE)
library('htmlTable')
summary(crrs)


## use the call from a crr2 object to run cmprsk::crr
cl <- crr2(Surv(futime, event(censored) == death) ~ age + sex + abo,
           na.omit(transplant))
cl[[1]]
eval(cl[[1]]$call)


## example from cmprsk::crr

# simulated data to test
set.seed(10)
ftime <- rexp(200)
fstatus <- sample(0:2,200,replace=TRUE)
cov <- matrix(runif(600),nrow=200)
dimnames(cov)[[2]] <- c('x1','x2','x3')
print(z <- crr(ftime,fstatus,cov))
summary(z)
deviance(z)

dat <- data.frame(ftime = ftime, fstatus = fstatus, cov)
(z2 <- crr2(Surv(ftime, fstatus(0) == 1) ~ ., dat, cox = FALSE))
z$call <- z2[[1]]$call <- NULL
all.equal(z[names(z)], z2[[1]][names(z)])

}
\seealso{
\code{\link[cmprsk]{crr}}; \code{\link{summary.crr2}};
\code{\link{print.crr2}}; \code{\link{finegray2}};
\code{\link[survival]{finegray}}; \code{\link[survival]{coxph}}
}

